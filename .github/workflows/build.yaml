name: Building CI/CD workflow

on:
  workflow_call:
    inputs:
      branch_name:
        required: true
        type: string
      commit_msg:
        required: true
        type: string

    outputs:
      IMAGE_VERSION:
        description: Semantic versioning of image
        value: ${{ jobs.docker.outputs.output1 }}

env:
  PAT_USERNAME: ${{ secrets.GITHUB_USERNAME }}
  PAT_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  BRANCH_NAME: ${{ inputs.branch_name }}
  COMMIT_MSG: ${{ inputs.commit_msg }}
  IMAGE_NAME: node-hello-world

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    outputs:
      output1: ${{ steps.step5.outputs.A }}
      
    steps:
      - name: Setup node ${{ matrix.node-version }}
        id: step1
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          
      - name: Checkout to repository
        id: step2
        uses: actions/checkout@v4
        

      - name: Login to Docker Hub
        id: step3
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        id: step4
        uses: docker/setup-buildx-action@v3

      - name: Semantic versioning
        id: step5
        run: |
          RELEASE_TYPES="major minor patch"
          COMMIT_MESSAGE=$(echo "$COMMIT_MSG")

          for type in $RELEASE_TYPES; do
            if [[ "$COMMIT_MESSAGE" == *"type"* ]]; then
              RELEASE_TYPE="$type"
              break
            fi
          done

          if [ -z "$RELEASE_TYPE" ]; then
              RELEASE_TYPE="patch"
          fi
          git config --global user.name pramodh003
          git config --global user.email pramodhbr29@gmail.com
          npm install
          VERSION=$(npm version $RELEASE_TYPE --no-git-tag-version)
          echo "A=$VERSION" >> $GITHUB_OUTPUT
          git add --force package.json
          git commit -m "Version bump"
          git push origin $(BRANCH_NAME) -f
          git clone --branch workflow https://$PAT_USERNAME:$PAT_TOKEN@github.com/Pramodh003/node-hello.git charts
          cp charts/Dockerfile Dockerfile
          export DOCKER_BUILDKIT=1
          docker buildx create --use
          docker buildx build . --push -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:$VERSION-${{ env.BRANCH_NAME }}
          

      - name: Docker Vulnerability Check
        id: step6
        uses: docker/scout-action@v0.18.1
        with:
          command: quickview,cves
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.step5.outputs.A }}-${{ env.BRANCH_NAME }}
          ignore-unchanged: true
          write-comment: true
          github-token: ${{ env.PAT_TOKEN }}

          
          
          
    
  
